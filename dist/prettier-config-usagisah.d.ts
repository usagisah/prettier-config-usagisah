declare const _default: {
    plugins: any[];
    semi?: boolean;
    singleQuote?: boolean;
    jsxSingleQuote?: boolean;
    trailingComma?: "none" | "es5" | "all";
    bracketSpacing?: boolean;
    bracketSameLine?: boolean;
    jsxBracketSameLine?: boolean;
    rangeStart?: number;
    rangeEnd?: number;
    parser?: import("prettier").LiteralUnion<import("prettier").BuiltInParserName, string> | import("prettier").CustomParser;
    filepath?: string;
    requirePragma?: boolean;
    insertPragma?: boolean;
    proseWrap?: "preserve" | "always" | "never";
    arrowParens?: "avoid" | "always";
    htmlWhitespaceSensitivity?: "css" | "strict" | "ignore";
    endOfLine?: "lf" | "auto" | "crlf" | "cr";
    quoteProps?: "as-needed" | "consistent" | "preserve";
    vueIndentScriptAndStyle?: boolean;
    embeddedLanguageFormatting?: "auto" | "off";
    singleAttributePerLine?: boolean;
    printWidth?: number;
    tabWidth?: number;
    useTabs?: boolean;
    parentParser?: string;
    __embeddedInHtml?: boolean;
    tailwindConfig?: string;
    tailwindFunctions?: string[];
    tailwindAttributes?: string[];
};
export default _default;
type CreateProps = {
    tailwind: boolean;
};
export declare function create({ tailwind }: CreateProps): {
    plugins: any[];
    semi?: boolean;
    singleQuote?: boolean;
    jsxSingleQuote?: boolean;
    trailingComma?: "none" | "es5" | "all";
    bracketSpacing?: boolean;
    bracketSameLine?: boolean;
    jsxBracketSameLine?: boolean;
    rangeStart?: number;
    rangeEnd?: number;
    parser?: import("prettier").LiteralUnion<import("prettier").BuiltInParserName, string> | import("prettier").CustomParser;
    filepath?: string;
    requirePragma?: boolean;
    insertPragma?: boolean;
    proseWrap?: "preserve" | "always" | "never";
    arrowParens?: "avoid" | "always";
    htmlWhitespaceSensitivity?: "css" | "strict" | "ignore";
    endOfLine?: "lf" | "auto" | "crlf" | "cr";
    quoteProps?: "as-needed" | "consistent" | "preserve";
    vueIndentScriptAndStyle?: boolean;
    embeddedLanguageFormatting?: "auto" | "off";
    singleAttributePerLine?: boolean;
    printWidth?: number;
    tabWidth?: number;
    useTabs?: boolean;
    parentParser?: string;
    __embeddedInHtml?: boolean;
    tailwindConfig?: string;
    tailwindFunctions?: string[];
    tailwindAttributes?: string[];
};
